apiVersion: v1
kind: Namespace
metadata:
  labels:
    istio-injection: enabled
  name: signadot
---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: signadot-operator
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: signadotroutes.signadot.com
spec:
  group: signadot.com
  names:
    kind: SignadotRoute
    listKind: SignadotRouteList
    plural: signadotroutes
    shortNames:
    - sdr
    singular: signadotroute
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: SignadotRoute is the Schema for the signadotroutes API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SignadotRouteSpec defines the desired state of SignadotRoute
            properties:
              containerPorts:
                description: ContainerPorts are all the ports declared by all containers
                  in the underlying workload.
                items:
                  description: ContainerPort represents a network port in a single
                    container.
                  properties:
                    containerPort:
                      description: Number of port to expose on the pod's IP address.
                        This must be a valid port number, 0 < x < 65536.
                      format: int32
                      type: integer
                    hostIP:
                      description: What host IP to bind the external port to.
                      type: string
                    hostPort:
                      description: Number of port to expose on the host. If specified,
                        this must be a valid port number, 0 < x < 65536. If HostNetwork
                        is specified, this must match ContainerPort. Most containers
                        do not need this.
                      format: int32
                      type: integer
                    name:
                      description: If specified, this must be an IANA_SVC_NAME and
                        unique within the pod. Each named port in a pod must have
                        a unique name. Name for the port that can be referred to by
                        services.
                      type: string
                    protocol:
                      default: TCP
                      description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults
                        to "TCP".
                      type: string
                  required:
                  - containerPort
                  type: object
                minItems: 1
                type: array
              workloadID:
                description: WorkloadID is the unique ID of the original workload
                  (e.g. a Deployment) that was cloned into the destination workspace.
                type: string
              workspaceID:
                description: WorkspaceID is the unique ID of the destination workspace
                  of this route.
                type: string
            required:
            - containerPorts
            - workloadID
            - workspaceID
            type: object
          status:
            description: SignadotRouteStatus defines the observed state of SignadotRoute
            properties:
              endpoints:
                description: Endpoints are the currently-available (Ready) endpoints
                  for this route, if any.
                items:
                  description: RouteEndpoint is one endpoint that can be used to satisfy
                    a given route.
                  properties:
                    address:
                      description: Address is the IP or host (no port).
                      type: string
                    port:
                      description: Port is the port number.
                      format: int32
                      type: integer
                  required:
                  - address
                  - port
                  type: object
                type: array
              observedGeneration:
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.4.1
  creationTimestamp: null
  name: signadotworkspaces.signadot.com
spec:
  group: signadot.com
  names:
    kind: SignadotWorkspace
    listKind: SignadotWorkspaceList
    plural: signadotworkspaces
    shortNames:
    - sdw
    singular: signadotworkspace
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: SignadotWorkspace can be used to create a workspace in which
          customized versions of one or more workloads (e.g. running work-in-progress
          code) run alongside the real workloads and serve only those requests that
          are explicitly tagged to run in this workspace.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SignadotWorkspaceSpec defines the desired state of SignadotWorkspace
            properties:
              customization:
                description: Customization describes the ways in which live workloads
                  running in the cluster should be customized for this workspace.
                properties:
                  images:
                    description: "Images to replace when cloning workloads (e.g. Deployments)
                      for this workspace. \n Any live Deployment (one that isn't part
                      of a workspace) that uses an image from this list will be cloned
                      and the clone will use the new image name and/or tag specified."
                    items:
                      description: ImageReplacement describes a rule for replacing
                        images in cloned containers.
                      properties:
                        name:
                          description: "Name specifies which image name in live workloads
                            will be replaced. \n Example: us.gcr.io/my-staging-registry/widget"
                          type: string
                        newName:
                          description: "NewName provides a replacement for the image
                            name (the part before the tag). If this is left unset,
                            the image name will not be changed. \n Example: us.gcr.io/my-dev-registry/username/widget"
                          type: string
                        newTag:
                          description: "NewTag provides a replacement tag for the
                            image. If this is left unset, the image tag will not be
                            changed. \n Example: v1.0.0-snapshot-abc123"
                          type: string
                      required:
                      - name
                      type: object
                    type: array
                  overlays:
                    description: "Overlays define custom objects to clone into the
                      workspace, creating a workspace state that consists of these
                      custom objects layered on top of the live, baseline state. \n
                      This can be used, for example, to create cloned Deployments
                      based on manifest changes that have been committed on a git
                      branch. \n If an overlay defines an object that already exists
                      in the live, baseline state, the overlay's version of the object
                      will be used as the starting point for cloning and patching
                      instead of the baseline object. \n If an overlay defines an
                      object that doesn't exist in the baseline state, that object
                      will be cloned into the workspace and patched as if it had been
                      found in the baseline state. \n If more than one overlay defines
                      the same object, the precedence is determined by the order in
                      which overlays are listed in this field. Each overlay takes
                      precedence over any overlays that came before it in the list
                      order."
                    items:
                      description: "Overlay defines a set of objects to clone into
                        the workspace. \n In the future, there may be multiple alternative
                        subfields to define overlays in different ways. Each overlay
                        entry should only set one of these subfields."
                      properties:
                        git:
                          description: Git specifies how to extract objects from Kubernetes
                            YAML manifests in a git repository.
                          properties:
                            baseBranch:
                              description: "BaseBranch is the branch to compare against,
                                usually \"main\" or \"master\". \n Objects will only
                                be added to the overlay if they have been changed
                                in some commit along the path from the target commit
                                back to the point at which its branch diverged from
                                the base branch. Changes made on the base branch after
                                that point will not trigger objects to be cloned into
                                the workspace since those changes are presumed to
                                be orthogonal to the PR. \n Note that manifest extraction
                                will always use the signadot.yaml config from the
                                target commit regardless of which commit is being
                                scanned. This ensures an apples-to-apples comparison
                                and allows config changes to apply retroactively to
                                old commits."
                              type: string
                            branch:
                              description: "Branch is the git branch from which to
                                pull objects. \n For now, this is only used to add
                                human-readable annotations for debuggability. The
                                commit hash is the real source of truth for what will
                                be checked out."
                              type: string
                            commit:
                              description: "Commit is the target git commit hash to
                                checkout and scan for changed objects. \n This is
                                the real source of truth for what to checkout, instead
                                of just checking out the head of the specified branch
                                at a point in time. Specifying a commit hash makes
                                the overlay deterministic and also serves as a way
                                to tell the operator when a new commit has been pushed
                                to the branch. \n Objects found in manifests at this
                                commit will only be cloned if they've changed since
                                the point at which this commit's branch diverged from
                                the specified base branch."
                              type: string
                            repo:
                              description: "Repo is the git repository URL. Currently
                                only SSH is supported. \n This repository must have
                                a signadot.yaml file at the repository root, describing
                                where to find Kubernetes manifests and how to expand
                                any templates if necessary. \n Example: github.com:signadot/hotrod.git"
                              type: string
                            sshKeySecret:
                              description: "SSHKeySecret specifies a value within
                                a given Kubernetes Secret object to use as the SSH
                                private key when cloning the git repository. \n Note
                                that this Secret must be in the signadot-operator
                                namespace, not in the SignadotWorkspace's namespace,
                                since it's used by a background Job that the operator
                                spawns there. \n This private key should have been
                                granted read access to the repository, such as by
                                adding the corresponding public key as a GitHub Deploy
                                Key."
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                                    TODO: Add other useful fields. apiVersion, kind,
                                    uid?'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or its key
                                    must be defined
                                  type: boolean
                              required:
                              - key
                              type: object
                          required:
                          - baseBranch
                          - branch
                          - commit
                          - repo
                          - sshKeySecret
                          type: object
                      type: object
                    type: array
                  patches:
                    description: "Patches to apply when cloning workloads (e.g. Deployments)
                      for this workspace. \n Each patch describes which object it
                      applies to. If a matching object is found, a clone of that object
                      will be created for this workspace and the patch will be applied
                      to the clone. \n If multiple patches and/or image replacement
                      rules match a given object, only one clone of that object will
                      be created, and then all matching patches and image replacements
                      will be applied on top of one another to the clone. Patches
                      will be applied first, in the order listed here, and then image
                      replacements will be applied afterward. \n Each patch can be
                      defined in any one of the formats supported by `kubectl patch`.
                      See: https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/
                      \n Only one of the following fields should be set for each patch
                      in the list: \n   strategic - Define the patch in Kubernetes
                      strategic merge patch format.   merge - Define the patch in
                      JSON Merge Patch format (RFC 7386).   json - Define the patch
                      in JSON Patch format (RFC 6902)."
                    items:
                      description: Patch describes a set of changes to apply to a
                        given object.
                      properties:
                        json:
                          description: JSON specifies the patch in JSON Patch format
                            (RFC 6902).
                          items:
                            type: object
                          type: array
                          x-kubernetes-preserve-unknown-fields: true
                        merge:
                          description: Merge specifies the patch in JSON Merge Patch
                            format (RFC 7396).
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        strategic:
                          description: "Strategic specifies the patch in Kubernetes
                            strategic merge patch format. \n See: https://kubernetes.io/docs/tasks/manage-kubernetes-objects/update-api-object-kubectl-patch/"
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        target:
                          description: Target specifies what object this patch applies
                            to.
                          properties:
                            apiVersion:
                              description: APIVersion specifies the API Version (e.g.
                                "apps/v1") of the object to patch.
                              type: string
                            kind:
                              description: Kind specifies the Kind (e.g. "Deployment")
                                of the object to patch.
                              type: string
                            name:
                              description: Name specifies the name of the object to
                                patch.
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          type: object
                      required:
                      - target
                      type: object
                    type: array
                type: object
              id:
                description: "ID should be a unique identifier for the workspace.
                  \n It can be up to 32 characters, consisting of lowercase alphanumeric
                  characters or '-', but it must both start and end with an alphanumeric
                  character."
                maxLength: 32
                minLength: 1
                pattern: ^[a-z0-9]([a-z0-9-]*[a-z0-9])?$
                type: string
            required:
            - id
            type: object
          status:
            description: SignadotWorkspaceStatus defines the observed state of SignadotWorkspace
            properties:
              conditions:
                description: 'Conditions is a list of conditions that matches the
                  conventions expected by kubectl, allowing our CRDs to work with:
                  kubectl wait --for=condition=...'
                items:
                  description: 'StatusCondition is a condition struct that matches
                    the conventions expected by kubectl, allowing our CRDs to work
                    with: kubectl wait --for=condition=...'
                  properties:
                    lastTransitionTime:
                      format: date-time
                      type: string
                    message:
                      type: string
                    reason:
                      type: string
                    status:
                      type: string
                    type:
                      type: string
                  required:
                  - status
                  - type
                  type: object
                type: array
              customizedDeployments:
                description: CustomizedDeployments is the number of Deployments that
                  have been cloned and customized.
                format: int32
                type: integer
              observedGeneration:
                format: int64
                type: integer
              overlays:
                description: Overlays is the total number of overlays defined for
                  this workspace.
                format: int32
                type: integer
              readyOverlays:
                description: ReadyOverlays is the number of overlays whose objects
                  have been generated or extract successfully.
                format: int32
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: signadot-controller-manager
  namespace: signadot-operator
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: agent
  namespace: signadot
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: routeserver
  namespace: signadot
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: signadot-leader-election-role
  namespace: signadot-operator
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  creationTimestamp: null
  name: signadot-manager-role
  namespace: signadot-operator
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
- apiGroups:
  - ""
  resourceNames:
  - webhook-server-cert
  resources:
  - secrets
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: signadot-agent
rules:
- apiGroups:
  - signadot.com
  resources:
  - signadotworkspaces
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - delete
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: signadot-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resourceNames:
  - signadot-mutating-webhook-configuration
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - apps
  resources:
  - replicasets
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - delete
  - deletecollection
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - signadot.com
  resources:
  - signadotroutes
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - signadot.com
  resources:
  - signadotroutes/finalizers
  verbs:
  - update
- apiGroups:
  - signadot.com
  resources:
  - signadotroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - signadot.com
  resources:
  - signadotworkspaces
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - signadot.com
  resources:
  - signadotworkspaces/finalizers
  verbs:
  - update
- apiGroups:
  - signadot.com
  resources:
  - signadotworkspaces/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: signadot-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: signadot-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: signadot-routeserver
rules:
- apiGroups:
  - signadot.com
  resources:
  - signadotroutes
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: signadot-leader-election-rolebinding
  namespace: signadot-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: signadot-leader-election-role
subjects:
- kind: ServiceAccount
  name: signadot-controller-manager
  namespace: signadot-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: signadot-manager-rolebinding
  namespace: signadot-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: signadot-manager-role
subjects:
- kind: ServiceAccount
  name: signadot-controller-manager
  namespace: signadot-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: signadot-agent
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: signadot-agent
subjects:
- kind: ServiceAccount
  name: agent
  namespace: signadot
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: signadot-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: signadot-manager-role
subjects:
- kind: ServiceAccount
  name: signadot-controller-manager
  namespace: signadot-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: signadot-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: signadot-proxy-role
subjects:
- kind: ServiceAccount
  name: signadot-controller-manager
  namespace: signadot-operator
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: signadot-routeserver
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: signadot-routeserver
subjects:
- kind: ServiceAccount
  name: routeserver
  namespace: signadot
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: 42470b05.signadot.com
kind: ConfigMap
metadata:
  name: signadot-manager-config
  namespace: signadot-operator
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: signadot-controller-manager-metrics-service
  namespace: signadot-operator
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: signadot-webhook-service
  namespace: signadot-operator
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: routeserver
  namespace: signadot
spec:
  ports:
  - port: 8080
  selector:
    app: routeserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: signadot-controller-manager
  namespace: signadot-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        image: signadot/workspaces-operator:v0.6.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 100m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 128Mi
        securityContext:
          allowPrivilegeEscalation: false
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      securityContext:
        runAsNonRoot: true
      serviceAccountName: signadot-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: agent
  namespace: signadot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: signadot-agent
  template:
    metadata:
      labels:
        app: signadot-agent
    spec:
      containers:
      - args:
        - --agent-token=$(AGENT_TOKEN)
        - --tunnel-addr=tunnel.signadot.com:2222
        - --tunnel-ca=/app/tunnel-server.crt
        - --tunnel-tls-server-name-override=preview.signadot.com
        env:
        - name: AGENT_TOKEN
          valueFrom:
            secretKeyRef:
              key: token
              name: cluster-agent
        image: signadot/workspaces-agent:v0.6.4
        imagePullPolicy: IfNotPresent
        name: agent
        ports:
        - containerPort: 8088
      serviceAccountName: agent
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: routeserver
  namespace: signadot
spec:
  replicas: 1
  selector:
    matchLabels:
      app: routeserver
  template:
    metadata:
      labels:
        app: routeserver
    spec:
      containers:
      - image: signadot/workspaces-routeserver
        imagePullPolicy: IfNotPresent
        name: routeserver
        ports:
        - containerPort: 8080
      serviceAccountName: routeserver
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: signadot-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: signadot-webhook-service
      namespace: signadot-operator
      path: /mutate-v1-pod
  failurePolicy: Ignore
  name: sidecar-injector.signadot.com
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    resources:
    - pods
  sideEffects: None
